{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[],"dockerImageVersionId":31011,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-05-09T13:52:59.227218Z\",\"iopub.execute_input\":\"2025-05-09T13:52:59.227909Z\",\"iopub.status.idle\":\"2025-05-09T13:53:04.491783Z\",\"shell.execute_reply.started\":\"2025-05-09T13:52:59.227880Z\",\"shell.execute_reply\":\"2025-05-09T13:53:04.491090Z\"}}\n!pip install trimesh pythreejs --quiet\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-05-09T13:55:28.968401Z\",\"iopub.execute_input\":\"2025-05-09T13:55:28.969260Z\",\"iopub.status.idle\":\"2025-05-09T13:55:32.242483Z\",\"shell.execute_reply.started\":\"2025-05-09T13:55:28.969235Z\",\"shell.execute_reply\":\"2025-05-09T13:55:32.241647Z\"}}\n# Install required packages\n!pip install -q trimesh\n\nimport trimesh\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Step 1: Define a function to generate basic shapes\ndef text_to_shape(text_prompt):\n    text_prompt = text_prompt.lower()\n    if \"sphere\" in text_prompt or \"ball\" in text_prompt:\n        mesh = trimesh.creation.icosphere(radius=1.0)\n    elif \"box\" in text_prompt or \"cube\" in text_prompt:\n        mesh = trimesh.creation.box(extents=[1.0, 1.0, 1.0])\n    elif \"cylinder\" in text_prompt:\n        mesh = trimesh.creation.cylinder(radius=0.5, height=1.5)\n    elif \"cone\" in text_prompt:\n        mesh = trimesh.creation.cone(radius=0.5, height=1.5)\n    elif \"pyramid\" in text_prompt:\n        # Create a pyramid using vertices and faces\n        vertices = [[0, 0, 1], [1, 1, 0], [-1, 1, 0], [-1, -1, 0], [1, -1, 0]]\n        faces = [[0, 1, 2], [0, 2, 3], [0, 3, 4], [0, 4, 1], [1, 2, 3], [1, 3, 4]]\n        mesh = trimesh.Trimesh(vertices=vertices, faces=faces)\n    else:\n        raise ValueError(\"Unrecognized shape. Try 'sphere', 'box', 'pyramid', etc.\")\n    return mesh\n\n# Step 2: Visualize using matplotlib\ndef plot_mesh(mesh):\n    fig = plt.figure(figsize=(6, 6))\n    ax = fig.add_subplot(111, projection='3d')\n    ax.plot_trisurf(mesh.vertices[:, 0], mesh.vertices[:, 1], mesh.faces, mesh.vertices[:, 2], color='lightblue')\n    ax.set_title(\"Generated 3D Shape\")\n    plt.tight_layout()\n    plt.show()\n\n# Step 3: Test it\ntext_prompt = \"pyramid\"  # Change this to test other shapes like \"sphere\", \"box\", \"cylinder\"\nmesh = text_to_shape(text_prompt)\nplot_mesh(mesh)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-05-09T14:39:30.165357Z\",\"iopub.execute_input\":\"2025-05-09T14:39:30.165983Z\",\"iopub.status.idle\":\"2025-05-09T14:39:30.774762Z\",\"shell.execute_reply.started\":\"2025-05-09T14:39:30.165952Z\",\"shell.execute_reply\":\"2025-05-09T14:39:30.774071Z\"}}\n!git clone https://github.com/khushi08shekhawat/text-to-3d-generator.git\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2025-05-09T14:55:43.222695Z\",\"iopub.execute_input\":\"2025-05-09T14:55:43.223441Z\",\"iopub.status.idle\":\"2025-05-09T14:55:44.593638Z\",\"shell.execute_reply.started\":\"2025-05-09T14:55:43.223415Z\",\"shell.execute_reply\":\"2025-05-09T14:55:44.592740Z\"}}\n!jupyter nbconvert --to script text-to-3d-generator.ipynb","metadata":{"_uuid":"9a2d2de3-af9f-441b-a668-e1c9a00c94b6","_cell_guid":"048b6ad9-5f07-49a0-9b28-34a5efb38ab8","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}